name: App Build

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          check-latest: true

      - name: Install npm packages
        run: npm install
        working-directory: ./frontend

      - name: Build project
        run: npm run build
        working-directory: ./frontend

      - name: Prepare project folder
        run: mkdir web
        working-directory: ./frontend

      - name: Prepare project folder
        run: mkdir app
        working-directory: ./frontend/web

      - name: Move files to project folder
        run: cp -a /dist/. /web/app
        working-directory: ./frontend

      - name: Prepare nginx config
        run: mkdir .nginx
        working-directory: ./frontend/web

      - name: Create nginx.conf
        run: touch nginx.conf
        working-directory: ./frontend/web/.nginx

      - name: Edit nginx.conf
        run: echo -e "server { \n listen 80; \n\n location / {\n  root /usr/share/nginx/html;\n  index index.html index.htm;\n  try_files $uri $uri/ /index.html =404;\n}\n\n include /etc/nginx/extra-conf.d/*.conf;\n}" > nginx.conf
        working-directory: ./frontend/web/.nginx

      - name: Create Dockerfile
        run: touch Dockerfile
        working-directory: ./frontend/web

      - name: Edit Dockerfile
        run: echo -e "FROM nginx:latest\n\n## Remove default nginx index page\nRUN rm -rf /usr/share/nginx/html/*\n\n# Copy the app\nCOPY /app/ /usr/share/nginx/html\n\n# Copy the config\nCOPY /.nginx/nginx.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\n\nENTRYPOINT ['nginx', '-g', 'daemon off;']" > Dockerfile
        working-directory: ./frontend/web

      - name: Deploy
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: web
          FOLDER: frontend/web
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
